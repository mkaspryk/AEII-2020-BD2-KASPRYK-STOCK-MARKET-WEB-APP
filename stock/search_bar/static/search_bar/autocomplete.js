 var currencies = [
   "0XBTC",
 "1ST",
 "1WO",
 "AAC",
 "ABCC",
 "ABT",
 "ABYSS",
 "ACCN",
 "ACE",
 "ADA",
 "ADB",
 "ADH",
 "ADI",
 "ADL",
 "ADT",
 "ADX",
 "AE",
 "AEN",
 "AERGO",
 "AGI",
 "AGVC",
 "AID",
 "AIDOC",
 "AIT",
 "AIX",
 "ALIS",
 "ALX",
 "AMB",
 "AMLT",
 "AMM",
 "AMN",
 "AMO",
 "ANKR",
 "ANT",
 "AOA",
 "APIS",
 "APPC",
 "ARAW",
 "ARBT",
 "ARCT",
 "ARN",
 "ART",
 "ARY",
 "AST",
 "ASTO",
 "ATL",
 "ATM",
 "ATMI",
 "ATS",
 "AUC",
 "AVH",
 "AVT",
 "AWC",
 "AXPR",
 "B2B",
 "BAAS",
 "BANCA",
 "BAT",
 "BAX",
 "BBC",
 "BBO",
 "BCAP",
 "BCDN",
 "BCDT",
 "BCH",
 "BCPT",
 "BDG",
 "BEAT",
 "BEE",
 "BELA",
 "BERRY",
 "BETHER",
 "BETR",
 "BEZ",
 "BFT",
 "BGG",
 "BIO",
 "BITX",
 "BIX",
 "BKX",
 "BLNM",
 "BLOC",
 "BLT",
 "BLZ",
 "BMC",
 "BMH",
 "BMX",
 "BNK",
 "BNN",
 "BNT",
 "BNTY",
 "BOB",
 "BOE",
 "BOLT",
 "BOLTT",
 "BON",
 "BOT",
 "BOUTS",
 "BOX",
 "BPT",
 "BPX",
 "BQ",
 "BQTX",
 "BRAT",
 "BRD",
 "BSTN",
 "BSV",
 "BTC",
 "BTCL",
 "BTCM",
 "BTCRED",
 "BTM",
 "BTMX",
 "BTO",
 "BTRN",
 "BTU",
 "BUBO",
 "BUD",
 "BWT",
 "BZ",
 "BZKY",
 "BZNT",
 "C20",
 "CAG",
 "CAN",
 "CANDY",
 "CAPP",
 "CAR",
 "CARAT",
 "CARD",
 "CBC",
 "CBT",
 "CCCX",
 "CCL",
 "CCO",
 "CCRB",
 "CCT",
 "CDT",
 "CDX",
 "CEDEX",
 "CEEK",
 "CEL",
 "CELR",
 "CEN",
 "CENNZ",
 "CET",
 "CHAT",
 "CHP",
 "CHSB",
 "CHT",
 "CHX",
 "CJT",
 "CL",
 "CLN",
 "CMCT",
 "CMS",
 "CMT",
 "CND",
 "CNN",
 "CNX",
 "COB",
 "COFI",
 "COIN",
 "CONI",
 "COSM",
 "COT",
 "COU",
 "COV",
 "COVA",
 "CPAY",
 "CPCH",
 "CPT",
 "CPY",
 "CRB",
 "CRDS",
 "CRED",
 "CREDO",
 "CRO",
 "CRPT",
 "CRYC",
 "CSEN",
 "CSM",
 "CSNO",
 "CSP",
 "CTXC",
 "CUBE",
 "CV",
 "CVC",
 "CVT",
 "CXO",
 "DACC",
 "DADI",
 "DAG",
 "DAGT",
 "DAI",
 "DAN",
 "DAOC",
 "DAPS",
 "DASH",
 "DAT",
 "DATA",
 "DATX",
 "DAV",
 "DAX",
 "DAY",
 "DBET",
 "DCN",
 "DDD",
 "DEB",
 "DEC",
 "DENT",
 "DFXT",
 "DGD",
 "DGTX",
 "DGX",
 "DICE",
 "DIG",
 "DIO",
 "DLT",
 "DML",
 "DMT",
 "DNA",
 "DNT",
 "DOCK",
 "DOGE",
 "DOOH",
 "DOV",
 "DOW",
 "DPY",
 "DRG",
 "DRGN",
 "DROP",
 "DRPU",
 "DRT",
 "DTH",
 "DTR",
 "DTRC",
 "DTX",
 "DXT",
 "EARTH",
 "EBC",
 "EBTC",
 "ECASH",
 "ECHT",
 "ECOM",
 "ECTE",
 "EDG",
 "EDN",
 "EDO",
 "EDU",
 "EGCC",
 "EGT",
 "EKO",
 "EKT",
 "ELEC",
 "ELF",
 "ELI",
 "ELITE",
 "ELIX",
 "ELTCOIN",
 "ELY",
 "EMPH",
 "ENGT",
 "ENJ",
 "ENTER",
 "EOSDAC",
 "EQUAL",
 "ERC20",
 "ERIS",
 "ERO",
 "ESS",
 "EST",
 "ESZ",
 "ETBS",
 "ETC",
 "ETG",
 "ETGP",
 "ETH",
 "ETHM",
 "ETHOS",
 "ETK",
 "ETN",
 "EURS",
 "EVC",
 "EVE",
 "EVED",
 "EVR",
 "EVX",
 "EXC",
 "EXMR",
 "EXRN",
 "EXY",
 "FACE",
 "FAIRG",
 "FAT",
 "FDX",
 "FDZ",
 "FET",
 "FLIK",
 "FLIXX",
 "FLOT",
 "FLUZ",
 "FND",
 "FNTB",
 "FOAM",
 "FOTA",
 "FOXT",
 "FREC",
 "FREE",
 "FSN",
 "FT",
 "FTM",
 "FTT",
 "FTX",
 "FUEL",
 "FUN",
 "FUNDZ",
 "FXT",
 "FYP",
 "GAMB",
 "GARD",
 "GEM",
 "GENE",
 "GENS",
 "GETX",
 "GNO",
 "GNT",
 "GNX",
 "GOOD",
 "GRID",
 "GRMD",
 "GRX",
 "GSC",
 "GST",
 "GTC",
 "GTO",
 "GUESS",
 "GUP",
 "GUSD",
 "GVE",
 "GVT",
 "HAND",
 "HB",
 "HBT",
 "HBZ",
 "HEDG",
 "HER",
 "HERO",
 "HGT",
 "HIT",
 "HKN",
 "HMC",
 "HMQ",
 "HORSE",
 "HPB",
 "HPT",
 "HQT",
 "HQX",
 "HSC",
 "HST",
 "HT",
 "HUR",
 "HVN",
 "HYDRO",
 "HYT",
 "ICHX",
 "ICN",
 "ICON",
 "IDEX",
 "IDH",
 "IDT",
 "IDXM",
 "IETH",
 "IFT",
 "IG",
 "IHF",
 "IHT",
 "IMT",
 "IND",
 "ING",
 "INS",
 "INSTAR",
 "INT",
 "INVC",
 "INX",
 "INXT",
 "IOST",
 "IOTX",
 "IPC",
 "IPSX",
 "IQN",
 "ISR",
 "ITC",
 "ITL",
 "ITT",
 "IVY",
 "IXT",
 "J8T",
 "JC",
 "JET",
 "JNT",
 "JOINT",
 "JSE",
 "KAN",
 "KBC",
 "KCASH",
 "KCS",
 "KEY",
 "KICK",
 "KIN",
 "KIND",
 "KNC",
 "KRL",
 "KUE",
 "KWH",
 "LA",
 "LALA",
 "LAMB",
 "LATX",
 "LCS",
 "LDC",
 "LEDU",
 "LEND",
 "LEV",
 "LGO",
 "LIF",
 "LIFE",
 "LIKE",
 "LINA",
 "LINK",
 "LION",
 "LNC",
 "LND",
 "LOCI",
 "LOCK",
 "LOOM",
 "LPT",
 "LQDN",
 "LRC",
 "LST",
 "LTC",
 "LTO",
 "LUC",
 "LUN",
 "LYM",
 "M2O",
 "MANA",
 "MATIC",
 "MBTX",
 "MCO",
 "MDA",
 "MDCL",
 "MDS",
 "MEDX",
 "MEE",
 "MENLO",
 "META",
 "METAL",
 "METM",
 "MFG",
 "MFT",
 "MGO",
 "MIC",
 "MITH",
 "MITX",
 "MIXI",
 "MKR",
 "MLN",
 "MNC",
 "MNE",
 "MNTP",
 "MOAC",
 "MOF",
 "MOLK",
 "MOT",
 "MRK",
 "MRPH",
 "MTC",
 "MTH",
 "MTKN",
 "MTRC",
 "MTX",
 "MVL",
 "MWAT",
 "MXAI",
 "MXM",
 "MYB",
 "MYST",
 "NANJ",
 "NAS",
 "NAVI",
 "NBAI",
 "NBC",
 "NCASH",
 "NCC",
 "NCT",
 "NEC",
 "NEU",
 "NEXO",
 "NEXT",
 "NGC",
 "NIO",
 "NMR",
 "NOAH",
 "NOBS",
 "NOKU",
 "NOX",
 "NPER",
 "NPX",
 "NPXS",
 "NRG",
 "NRP",
 "NTK",
 "NULS",
 "NXC",
 "OAX",
 "OCN",
 "ODE",
 "OIO",
 "OKB",
 "OLE",
 "OLT",
 "OMG",
 "OMX",
 "ONG",
 "ONL",
 "OPEN",
 "OPT",
 "ORBS",
 "ORI",
 "ORME",
 "ORS",
 "OSA",
 "OST",
 "PAL",
 "PARETO",
 "PASS",
 "PAT",
 "PAX",
 "PAY",
 "PCH",
 "PCL",
 "PCO",
 "PFR",
 "PHI",
 "PIX",
 "PKT",
 "PLA",
 "PLAY",
 "PLBT",
 "PLR",
 "PLU",
 "PMA",
 "PMNT",
 "PNT",
 "POE",
 "POLL",
 "POLY",
 "POWR",
 "PPP",
 "PPT",
 "PRA",
 "PRG",
 "PRIX",
 "PRO",
 "PSM",
 "PST",
 "PTOY",
 "PXG",
 "PYLNT",
 "PYN",
 "QASH",
 "QBIT",
 "QCX",
 "QKC",
 "QNTU",
 "QSP",
 "QUANT",
 "QUN",
 "QUSD",
 "R",
 "RCN",
 "RCT",
 "RDC",
 "RDD",
 "REAL",
 "REBL",
 "REF",
 "REM",
 "REP",
 "REQ",
 "REX",
 "RFR",
 "RHOC",
 "RIYA",
 "RLC",
 "RLX",
 "RMESH",
 "RNT",
 "RNTB",
 "ROBET",
 "ROCK",
 "ROX",
 "RRC",
 "RTE",
 "RUFF",
 "RVT",
 "SAL",
 "SALT",
 "SAN",
 "SCC",
 "SCL",
 "SCRL",
 "SEAL",
 "SEELE",
 "SENC",
 "SENT",
 "SETH",
 "SGN",
 "SGR",
 "SHE",
 "SHIP",
 "SHOW",
 "SHP",
 "SHPING",
 "SKIN",
 "SKM",
 "SKRB",
 "SLT",
 "SMT",
 "SNC",
 "SNGLS",
 "SNIP",
 "SNM",
 "SNOV",
 "SNPC",
 "SNS",
 "SNT",
 "SNTR",
 "SNTVT",
 "SNX",
 "SOAR",
 "SOC",
 "SOLVE",
 "SOMA",
 "SPANK",
 "SPF",
 "SPHTX",
 "SPT",
 "SPX",
 "SRCH",
 "SRCOIN",
 "SRN",
 "SS",
 "STAC",
 "STACS",
 "STAR",
 "STASH",
 "STC",
 "STK",
 "STORJ",
 "STORM",
 "STQ",
 "STU",
 "STX",
 "SUB",
 "SUR",
 "SUSD",
 "SVD",
 "SWARM",
 "SWC",
 "SWFTC",
 "SWT",
 "SXDT",
 "SXUT",
 "TAAS",
 "TBX",
 "TCH",
 "TCT",
 "TDP",
 "TDS",
 "TEL",
 "TEN",
 "TFD",
 "TFL",
 "TFUEL",
 "TGAME",
 "TGT",
 "THETA",
 "THR",
 "THRT",
 "TIE",
 "TIG",
 "TIOX",
 "TIX",
 "TKN",
 "TMT",
 "TMTG",
 "TNB",
 "TNT",
 "TOMO",
 "TOPC",
 "TRAC",
 "TRAK",
 "TRCT",
 "TRDT",
 "TRIO",
 "TRST",
 "TRUE",
 "TSL",
 "TTC",
 "TTV",
 "TUSD",
 "UBC",
 "UBEX",
 "UBT",
 "UCT",
 "UDOO",
 "UFR",
 "UGAS",
 "UGC",
 "UKG",
 "UP",
 "UPP",
 "UQC",
 "USDC",
 "USDS",
 "USDT",
 "USE",
 "UTK",
 "UTNP",
 "UTT",
 "UUU",
 "VEE",
 "VERI",
 "VEST",
 "VET",
 "VIBE",
 "VIDT",
 "VIN",
 "VIT",
 "VITE",
 "VIU",
 "VME",
 "VNX",
 "VOISE",
 "VRA",
 "VRS",
 "VSL",
 "VZT",
 "WAB",
 "WABI",
 "WAN",
 "WAND",
 "WAX",
 "WBTC",
 "WCOIN",
 "WEB",
 "WELL",
 "WETH",
 "WHEN",
 "WINGS",
 "WISH",
 "WIZ",
 "WPP",
 "WPR",
 "WRC",
 "WT",
 "WTC",
 "WTL",
 "WYS",
 "X8X",
 "XAUR",
 "XBASE",
 "XBB",
 "XBL",
 "XBX",
 "XCD",
 "XCLR",
 "XDCE",
 "XES",
 "XET",
 "XMX",
 "XNG",
 "XNK",
 "XOV",
 "XPAT",
 "XUC",
 "XYO",
 "XZC",
 "YEE",
 "YOYOW",
 "YUP",
 "ZAP",
 "ZCN",
 "ZCO",
 "ZEC",
 "ZEON",
 "ZIL",
 "ZINC",
 "ZIP",
 "ZIPT",
 "ZLA",
 "ZMN",
 "ZPR",
 "ZRX",
 "ZSC",
 "ZT",
 "ZXC"
 ]

 console.log("autocomplete has been loaded")

function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false;}
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
              b.addEventListener("click", function(e) {
              /*insert the value for the autocomplete text field:*/
              inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
          });
          a.appendChild(b);
        }
      }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      }
      //else if (e.keyCode == 13) {
      //  /*If the ENTER key is pressed, prevent the form from being submitted,*/
      //  e.preventDefault();
      //  if (currentFocus > -1) {
      //    /*and simulate a click on the "active" item:*/
      //    if (x) x[currentFocus].click();
      //  }
      // }
  });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
      x[i].parentNode.removeChild(x[i]);
    }
  }
}
/*execute a function when someone clicks in the document:*/
document.addEventListener("click", function (e) {
    closeAllLists(e.target);
});
}

autocomplete(document.getElementById("crypto_input"), currencies);
